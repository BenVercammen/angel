// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.

import "dart:core";
import 'package:angel_container_generator/angel_container_generator.dart'
    as prefix0;
import 'reflector_test.dart' as prefix1;

// ignore:unused_import
import "package:reflectable/mirrors.dart" as m;
// ignore:unused_import
import "package:reflectable/src/reflectable_builder_based.dart" as r;
// ignore:unused_import
import "package:reflectable/reflectable.dart" as r show Reflectable;

final _data = <r.Reflectable, r.ReflectorData>{
  const prefix0.ContainedReflectable(): new r.ReflectorData(
      <m.TypeMirror>[
        new r.NonGenericClassMirrorImpl(
            r"Artist",
            r".Artist",
            7,
            0,
            const prefix0.ContainedReflectable(),
            const <int>[0, 3],
            const <int>[4, 5, 6, 7, 8, 1, 2],
            const <int>[],
            -1,
            {},
            {},
            {r"": (b) => () => b ? new prefix1.Artist() : null},
            -1,
            0,
            const <int>[],
            const <Object>[prefix0.contained],
            null)
      ],
      <m.DeclarationMirror>[
        new r.VariableMirrorImpl(
            r"name",
            32773,
            0,
            const prefix0.ContainedReflectable(),
            -1,
            1,
            1, const <int>[], const <Object>[]),
        new r.ImplicitGetterMirrorImpl(
            const prefix0.ContainedReflectable(), 0, 1, 1, 1),
        new r.ImplicitSetterMirrorImpl(
            const prefix0.ContainedReflectable(), 0, 1, 1, 2),
        new r.MethodMirrorImpl(r"", 64, 0, -1, 0, 0, const <int>[],
            const <int>[], const prefix0.ContainedReflectable(), const []),
        new r.MethodMirrorImpl(
            r"==",
            131074,
            null,
            -1,
            2,
            2,
            const <int>[],
            const <int>[1],
            const prefix0.ContainedReflectable(),
            const <Object>[]),
        new r.MethodMirrorImpl(
            r"toString",
            131074,
            null,
            -1,
            1,
            1,
            const <int>[],
            const <int>[],
            const prefix0.ContainedReflectable(),
            const <Object>[]),
        new r.MethodMirrorImpl(
            r"noSuchMethod",
            65538,
            null,
            null,
            null,
            null,
            const <int>[],
            const <int>[2],
            const prefix0.ContainedReflectable(),
            const <Object>[const pragma("vm:entry-point")]),
        new r.MethodMirrorImpl(
            r"hashCode",
            131075,
            null,
            -1,
            3,
            3,
            const <int>[],
            const <int>[],
            const prefix0.ContainedReflectable(),
            const <Object>[]),
        new r.MethodMirrorImpl(
            r"runtimeType",
            131075,
            null,
            -1,
            4,
            4,
            const <int>[],
            const <int>[],
            const prefix0.ContainedReflectable(),
            const <Object>[])
      ],
      <m.ParameterMirror>[
        new r.ParameterMirrorImpl(
            r"_name",
            32870,
            2,
            const prefix0.ContainedReflectable(),
            -1,
            1,
            1,
            const <int>[],
            const [],
            null,
            null),
        new r.ParameterMirrorImpl(
            r"other",
            16390,
            4,
            const prefix0.ContainedReflectable(),
            null,
            null,
            null,
            const <int>[],
            const <Object>[],
            null,
            null),
        new r.ParameterMirrorImpl(
            r"invocation",
            32774,
            6,
            const prefix0.ContainedReflectable(),
            -1,
            5,
            5,
            const <int>[],
            const <Object>[],
            null,
            null)
      ],
      <Type>[prefix1.Artist, String, bool, int, Type, Invocation],
      1,
      {
        r"==": (dynamic instance) => (x) => instance == x,
        r"toString": (dynamic instance) => instance.toString,
        r"noSuchMethod": (dynamic instance) => instance.noSuchMethod,
        r"hashCode": (dynamic instance) => instance.hashCode,
        r"runtimeType": (dynamic instance) => instance.runtimeType,
        r"name": (dynamic instance) => instance.name
      },
      {r"name=": (dynamic instance, value) => instance.name = value},
      null,
      [])
};

final _memberSymbolMap = null;

initializeReflectable() {
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
